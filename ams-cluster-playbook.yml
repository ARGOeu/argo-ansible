---


- hosts: all
  become: yes
  roles:
    - { role: commons,                 task: timezone,        tags: timezone              }
    - { role: commons,                 task: repos,           tags: repos                 }
    - { role: commons,                 task: basic_utils,     tags: basic_utils           }
    - { role: commons,                 task: users,           tags: groups_users_sshKeys  }
    - { role: commons,                 task: sshd,            tags: sshd                  }
    - { role: commons,                 task: firewall,        tags: firewall              }
    - { role: commons,                 task: fail2ban,        tags: fail2ban_conf         }
    - { role: commons,                 task: cert,            tags: cert                  }
    - { role: commons,                 task: rsyslog,         tags: rsyslog_conf          }
    - { role: nickhammond.logrotate,                          tags: logrotate             }
    #- { role: commons,                 task: is_monitored,    tags: monitored             }
    #- { role: commons,                 task: backupamsmongo,  tags: rsyslog_conf          }


- hosts: ams_cluster
  become: yes
  roles:
    - { role: private_hosts,    task: main,    tags: local_dns    }


- hosts: mongo_private_cluster
  become: yes
  roles:
    - { role: mongodb,    task: main,     tags: mongodb          }


- hosts: ams
  become: yes
  roles:
    - { role: zookeeper,     task: main,             tags: zookeeper_install    }
    - { role: kafka,         task: main,             tags: kafka_install        }
    - { role: ams,           task: deploy,           tags: ams_install          }
    - { role: ams,           task: deploy_metrics,   tags: ams_install          }
    - { role: ams,           task: init_db,          tags: init_ams_db          }


- hosts: ams_push_server
  become: yes
  roles:
    - { role: push-server,   task: push-server-setup,    tags: push_install     }


- hosts: haproxy
  become: yes
  roles:
    - { role: haproxy,    task: haproxy,  tags: haproxy_install  }


- hosts: authn
  become: yes
  roles:
    - { role: argo-api-authn,    task: authn-setup                                                         }
    - { role: argo-api-authn,    task: python-env-setup                                                    }
    - { role: argo-api-authn,    task: ams-create-users-gocdb-script,       tags: authn_ams_create_users   }
    - { role: argo-api-authn,    task: ams-create-users-cloud-info-script,  tags: authn_ams_create_users   }
    - { role: argo-api-authn,    task: scripts_cert                                                        }


