---

- name: Create cert_dir if not exists
  file: dest={{ cert_dir }} state=directory
        owner=root group=root mode=0755
  when: cert_dir is defined

- name: Copy host x509 certificate onto host
  tags: certificate
  copy: src=private_files/{{ inventory_hostname }}/{{ inventory_hostname }}.pem
        dest={{ cert_path }} backup=yes
        owner=root group=root mode=0644

- name: Copy host x509 key onto host
  tags: certificate
  copy: src=private_files/{{ inventory_hostname }}/{{ inventory_hostname }}.key
        dest={{ key_path }} backup=yes
        owner=root group=root mode=0400

- name: Create softlink (to cert) for API
  file: state=link
        src={{ cert_path }}
        path=/etc/pki/tls/certs/localhost.crt
  when: (inventory_hostname in groups.standalone) or (inventory_hostname in groups.messaging) 

- name: Create softlink (to key) for API
  file: state=link
        src={{ key_path }}
        path=/etc/pki/tls/private/localhost.key
  when: (inventory_hostname in groups.standalone) or (inventory_hostname in groups.messaging) 

- name: Copy host x509 certificate onto host
  tags: msg_certificate
  copy: src=private_files/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
        dest={{ cert_dir }}/{{ inventory_hostname }}.crt backup=yes
        owner=haproxy group=haproxy
  when: (inventory_hostname in groups.haproxy)
  
- name: Copy host x509 certificate onto host
  tags: msg_certificate
  copy: src=private_files/{{ inventory_hostname }}/{{ inventory_hostname }}.pem
        dest={{ argo_msg_path }}certs/localhost.crt backup=yes
        owner=argo-messaging group=argo-messaging
  when: (inventory_hostname in groups.messaging) and ( argo_msg_path is defined )

- name: Copy host x509 key onto host
  tags: msg_certificate
  copy: src=private_files/{{ inventory_hostname }}/{{ inventory_hostname }}.key
        dest={{ argo_msg_path }}certs/localhost.key backup=yes
        owner=argo-messaging group=argo-messaging
  when: (inventory_hostname in groups.messaging) and ( argo_msg_path is defined )
  
- name: Remove old p12 key for web ui
  shell: rm /etc/grid-security/server.p12
  ignore_errors: True
  when: inventory_hostname in groups.webui
  
- name: Create p12 key for web ui
  command: openssl pkcs12 -export -in hostcert.pem -inkey hostkey.pem -password pass:{{ keystore_password }} -out server.p12
           chdir=/etc/grid-security
           creates=/etc/grid-security/server.p12
  when: inventory_hostname in groups.webui
