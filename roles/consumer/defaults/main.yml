---
enabled_argo_repo: argo-devel

consumer_AMS_enabled: True
consumer_ams_configuration:
  PublishAms: True
  WriteAvro: True
  ams_host: messaging-devel.argo.grnet.gr
  ams_type_of_data: sync_data
  ams_num_of_bulk: 100
  PackSingleMsg: True

consumer_tenants:
  TENANTA:
    topics:
      - "nagios.metricOutput.TENANTA.PROJECT.*"
    brokers:
      - "tenant.argo.grnet.gr"
    outputdir: "/mnt/data/argo-connectors/TENANTA/"
    AuthenticationPoemToken: "token from poem ui"
    AmsProject: TENANTA
    AmsToken: TESTTOKEN 
    jobs_all: "Critical"
    HTTPAuth: True
    AuthenticationUsePlainHttpAuth: True
    AuthenticationHttpUser: tenantA
    AuthenticationHttpPass: xxxxxx
    cron_weight_minute: 35
    MsgIngestion_BulkSize: 1
    MsgIngestion_Token: TEST_TOKEN
    jobs_details:
      - name: "Critical"
        Directory: "Critical"
        Profiles: "CRITICAL"
        TopoType: "GOCDB"
        TopoFeed: "https://dp.eudat.eu/gocdbpi/"
        TopoFeedPaging: False
        TopoFetchType: "ServiceGroups"
        TopoSelectGroupOfEndpoints: "Monitored:Y"
        TopoSelectGroupOfGroups: 
        DowntimesFeed: "https://dp.eudat.eu/gocdbpi/"

consumer_poem_servers:
  - host: "tenanta.argo.grnet.gr"
    vos:
      - ops
  - host: "poem-eudat.argo.grnet.gr"
    vos:
      - ops
      
consumer_tenants_delete: []

consumer_poem_fetch_profiles:
  - CH.CERN.SAM.ARGO_MON
  - CH.CERN.SAM.ARGO_MON_OPERATORS
  - CH.CERN.SAM.ARGO_MON_CRITICAL
  - CH.CERN.SAM.OPS_MONITOR
  - CH.CERN.SAM.OPS_MONITOR_CRITICAL
  - EU.EUDAT.ARGO.CRITICAL
  - HR.CRO-NGI.TEST.CRITICAL_VISEEM
  - EU.SDC.ARGO.CRITICAL_SDC

consumer_data_path: "/mnt/data/"
consumer_cron_status: "false" #needed for cron jobs
consumer_path: /mnt/data/argo-egi-consumer
consumer_argo_sync_path: "/mnt/data/argo-connectors"

#Data for ingestion 
#consumer_WriteMsgFile: True
#consumer_WriteMsgIngestion: True
#consumer_MsgIngestion_Host: ingestion-devel.argo.grnet.gr
#consumer_MsgIngestion_Token: 064ba43b5c8b8d52266b57ead1859786394c6aa7
