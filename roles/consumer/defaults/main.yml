---

tenants:
  TenantA:
    topics:
      - "probe.metricOutput.tenantA.ngi.*"
      - "probe.metricOutput.tenantA.roc.*"
      - "probe.metricOutput.tenantA.opsmonitor.*"
      - "probe.metricOutput.tenantA.project.*"
      - "probe.metricOutput.tenantA.vo.*"
    brokers:
      - "broker1.example.com"
      - "broker2.example.com"
    outputdir: "/var/lib/argo-connectors/TenantA/"
    jobs_all: "JOB_TenantA_ALL, JOB_TenantA_PART"
    prefilter: "prefilter-tenantA.py"
    jobs_details:
      - name: "JOB_TenantA_ALL"
        Directory: "TenantA_ALL"
        Profiles: "ALL_SERVICES"
        TopoType: "GOCDB"
        TopoFeed: "https://goc.example.com/gocdbpi/"
        TopoFetchType: "Sites"
        TopoSelectGroupofEndpoints: "Production:Y, Monitored:Y, Scope:TenantA"
        TopoSelectGroupOfGroups: "Certification:Certified, Infrastructure:Production, Scope:TenantA"
        DowntimesFeed: "https://goc.example.com/gocdbpi/"
        MetricOps: "AND"
        Operations: "AND"
        Capabilities:
          - name: compute
            default_ops: "OR"
            flavors: 
              - name: CREAM
                ops: "OR"
              - name: CRUM
                ops: "OR"
              - name: SCRUM
                ops: "AND"
          - name: storage
            default_ops: "OR"
            flavors:
              - name: srmv2.2
                ops: "OR"
          - name: databases
            default_ops: "OR"
            flavors:
              - name: maria_db
                ops: "AND"
          - name: virtualization
            default_ops: "OR"
            flavors:
              - name: XEN
                ops: "OR"
              - name: KVM
                ops: "OR"
              - name: VSphere
                ops: "OR"
      - name: "JOB_TenantA_PART"
        Directory: "TenantA_PART"
        Profiles: "PART_SERVICES"
        TopoType: "GOCDB"
        TopoFeed: "https://goc.example.com/gocdbpi/"
        TopoFetchType: "Sites"
        TopoSelectGroupofEndpoints: "Production:Y, Monitored:Y, Scope:TenantA"
        TopoSelectGroupOfGroups: "Certification:Candidate, Infrastructure:Production, Scope:TenantA"
        DowntimesFeed: "https://goc.example.com/gocdbpi/"
        MetricOps: "AND"
        Operations: "AND"
        Capabilities:
          - name: virtualization
            default_ops: "OR"
            flavors:
              - name: XEN
                ops: "OR"
              - name: KVM
                ops: "OR"
              - name: VSphere
                ops: "OR"
  TenantB:
    topics:
      - "probe.*"
    brokers:
      - "broker3.example.com"
    outputdir: "/var/lib/argo-connectors/TenantB/"
    jobs_all: "JOB_TenantB_SERVICES"
    jobs_details:
      - name: "JOB_TenantB_SERVICES"
        Directory: "SERVICES"
        Profiles: "My_Critical_Services"
        TopoType: "GOCDB"
        TopoFeed: "https://goc.example.com/gocdbpi/"
        TopoFetchType: "ServiceGroups"
        TopoSelectGroupofEndpoints: "Production:Y, Monitored:Y, Scope:TenantB"
        TopoSelectGroupOfGroups: "Certification:Candidate, Infrastructure:Production, Scope:TenantB"
        DowntimesFeed: "https://goc.example.com/gocdbpi/"
        MetricOps: "AND"
        Operations: "AND"
        Capabilities:
          - name: compute
            default_ops: "OR"
            flavors: 
              - name: CREAM
                ops: "OR"
              - name: CRUM
                ops: "OR"
              - name: SCRUM
                ops: "AND"
          - name: storage
            default_ops: "OR"
            flavors:
              - name: srmv2.2
                ops: "OR"

poem_servers:
  - host: "poemA.example.com"
    vos:
      - ops
      - gridpp
  - host: "poemB.example.com"
    vos:
      - ops

poem_fetch_profiles:
  - profile_1
  - profile_2

mongo_host_or_ip: "127.0.0.1"
mongo_port_number: "27017"
argo_compute_mode: "local"
prefilter_clean_bool: "false"
argo_sync_path: "/var/lib/argo-connectors"
argo_exec_path: "/usr/libexec/argo-egi-connectors"
