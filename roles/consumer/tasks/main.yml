---

- name: Install avro from ar project
  tags: ar-packages
  yum: name=avro state=present enablerepo={{ enabled_argo_repo }}

- name: Install python-pip
  tags: ar-packages
  yum: name=python-pip state=present

- name: Upgrade pymongo to latest available version
  tags: ar-packages
  pip: name=pymongo state=latest

- name: Install consumer from ar project
  tags: ar-packages
  yum: name=argo-egi-consumer state=latest enablerepo={{ enabled_argo_repo }}
  notify: restart consumer

- name: Consumer configuration
  tags: consumer_config
  template: src=consumer.conf.j2
            dest=/etc/argo-egi-consumer/consumer.conf
            owner=root group=root mode=0644

- name: Enable and start consumer service
  tags: consumer_config
  service: name=argo-egi-consumer enabled=on state=started

- name: Install argo-egi-connectors from ar project
  tags: ar-packages
  yum: name=argo-egi-connectors state=latest enablerepo={{ enabled_argo_repo }}

- name: Configure EGI connectors
  tags: connectors_config
  copy: src=customer.conf
            dest=/etc/argo-egi-connectors/customer.conf
            owner=root group=root mode=0644
            backup=yes

- name: Install ar-compute from ar project
  tags: ar-packages
  yum: name=ar-compute state=latest enablerepo={{ enabled_argo_repo }}

- name: Configure ar-compute stuff 1
  tags: compute_config
  lineinfile: dest=/etc/ar-compute-engine.conf
              regexp="^mongo_host="
              line="mongo_host=127.0.0.1"
              state=present
              backup=yes

- name: Configure ar-compute stuff 2
  tags: compute_config
  lineinfile: dest=/etc/ar-compute-engine.conf
              regexp="^mode="
              line="mode=local"
              state=present
              backup=yes

- name: Configure ar-compute stuff 3
  tags: compute_config
  lineinfile: dest=/etc/ar-compute-engine.conf
              regexp="^prefilter_clean="
              line="prefilter_clean=false"
              state=present
              backup=yes

- name: Configure ar-compute stuff 4
  tags: consumer_config
  lineinfile: dest=/etc/ar-compute-engine.conf
              regexp="^sync_path="
              line="sync_path=/var/lib/argo-connectors"
              state=present
              backup=yes

- name: Configure ar-compute stuff 5
  tags: consumer_config
  lineinfile: dest=/etc/ar-compute-engine.conf
              regexp="^sync_exec="
              line="sync_exec=/usr/libexec/argo-egi-connectors"
              state=present
              backup=yes

- name: Configure ar-compute job cycle daily cron 
  tags: compute_config
  cron: cron_file=ar_job_cycle_daily
        user=root
        name=job_cycle_daily
        state=present
        minute=0
        hour=0
        job="/usr/libexec/ar-compute/bin/job_cycle.py -d $(/bin/date --utc --date '-1 day' +\%Y-\%m-\%d)"

- name: Configure ar-compute job cycle hourly cron 
  tags: compute_config
  cron: cron_file=ar_job_cycle_hourly
        user=root
        name=ar_job_cycle_hourly
        state=present
        minute=55
        hour=*
        job="/usr/libexec/ar-compute/bin/job_cycle.py -d $(/bin/date --utc  +\%Y-\%m-\%d)"

- name: Add ar-compute poller hourly cron for tenant EGI
  tags: compute_crons
  cron: cron_file=ar_poller_hourly_egi
        name=ar_poller_hourly_egi
        minute=25
        hour=*
        user=root
        job="/usr/libexec/ar-compute/bin/poller_ar.py -t EGI"
        state=present

- name: Create job directories
  tags: sync_config
  file: path={{ item }} owner=root group=root mode=0755 state=directory
  with_items:
    - /var/lib/argo-connectors/EGI/Cloudmon
    - /var/lib/argo-connectors/EGI/Critical

- name: Make sure ownerships are OK
  tags: consumer_config
  file: path={{ item }} owner=root group=arstats mode=0775 state=directory
  with_items:
    - /var/lib/argo-connectors
    - /var/lib/argo-egi-consumer

- name: Install ar-data-retention from ar project
  tags: ar-data-retention
  yum: name=ar-data-retention state=latest enablerepo={{ enabled_argo_repo }}

- name: Parametrize data retention policies
  tags: data_retention
  template: src=ar-data-retention.conf.j2
            dest=/etc/ar-data-retention/ar-data-retention.conf
            owner=root group=root mode=0644

