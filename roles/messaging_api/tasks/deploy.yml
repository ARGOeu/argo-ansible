---

- name: Install argo-messaging package
  yum: name=argo-messaging state=latest enablerepo={{ enabled_argo_repo }} update_cache=yes
  notify: restart argo-messaging service
  tags: messaging_api

- name: systemctl daemon-reload to avoid message for disk rellocation
  command: systemctl daemon-reload
  ignore_errors: yes

- name: allow bind port 443
  shell: setcap 'cap_net_bind_service=+ep' /var/www/argo-messaging/argo-messaging
  tags: messaging_api


- name: Move init_roles.js script
  template: dest="/tmp/init_roles.js" owner=root group=root mode=640 src=init_roles.js.j2
  tags:
    - messaging_api
    - init_roles

- name: Run init_roles.js script
  shell: mongo < /tmp/init_roles.js
  tags:
    - messaging_api
    - init_roles

- name: Move init_projects.js script
  template: dest="/tmp/init_projects.js" owner=root group=root mode=640 src=init_projects.js.j2
  tags:
    - messaging_api
    - init_projects

- name: Run init_projects.js script
  shell: mongo < /tmp/init_projects.js
  tags:
    - messaging_api
    - init_projects

- name: Move init_users.js script
  template: dest="/tmp/init_users.js" owner=root group=root mode=640 src=init_users.js.j2
  tags:
    - messaging_api
    - init_users

- name: Run init_users.js script
  shell: mongo < /tmp/init_users.js
  tags:
    - messaging_api
    - init_users


- name: Configure argo-messaging api
  template: src=config.json.j2
            dest=/etc/argo-messaging/config.json backup=yes
            owner=root group=root mode=0644
  notify: restart argo-messaging service
  tags: messaging_api

- name: Start argo-messaging service
  service: name=argo-messaging state=started
  tags: messaging_api
