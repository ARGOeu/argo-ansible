---
# set up the script that creates users to both ams and authn, imported from gocdb

- name: create directory to host all virtualenvs
  file:
    path: "{{virtual_env_installation}}"
    state: directory

- name: install virtualenv with pip
  pip:
    name: "virtualenv"

- name: install git
  yum:
    name: git

- name: Create a virtualenv and install the requirements
  pip:
    name: git+https://github.com/ARGOeu/argo-api-authn.git@devel#egg=argo-api-authn-scripts
    virtualenv: "{{virtual_env_installation}}/authn-env"
    virtualenv_python: python2.7

- name: change permissions for authn-env
  file:
    path: "{{virtual_env_installation}}"
    state: directory
    owner: argo-api-authn
    group: argo-api-authn
    mode: 0755
    recurse: yes

- name: "template configuration for ams-create-users-gocdb script"
  template:
    src: ams-create-users-gocdb.cfg.j2
    dest: "{{service_configuration_folder}}/ams-create-users-gocdb.cfg"

- name: change permissions for ams-create-users-gocdb.cfg
  file:
    path: "{{service_configuration_folder}}/ams-create-users-gocdb.cfg"
    owner: argo-api-authn
    group: argo-api-authn
    mode: 0644

- name: "set up cron for ams-create-users-gocdb"
  cron:
    cron_file: ams-create-users-gocdb
    name: "set up cron for ams-create-users-gocdb"
    user: argo-api-authn
    special_time: hourly
    job: "{{virtual_env_installation}}/authn-env/bin/python {{virtual_env_installation}}/authn-env/bin/ams-create-users-gocdb.py -v"
