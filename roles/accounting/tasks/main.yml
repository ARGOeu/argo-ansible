---
# tasks file for accounting


- name: Ensure group "{{ accounting_group }}" exists
  group:
    name: "{{ accounting_group }}"
    state: present
  tags:
    - accounting
    - accounting:user

- name: Add user "{{ accounting_user }}"
  user:
    name: "{{ accounting_user }}"
    groups: "{{ accounting_group }}"
    append: yes
    create_home: no
    shell: /sbin/nologin
    comment: accounting nologin user
  tags:
    - accounting
    - accounting:user


- name: Install Java 11
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - java-11-openjdk
    - java-11-openjdk-devel
  tags:
    - accounting
    - accounting:packages
    - accounting:java
    - accounting:maven

- name: Download maven 3.8.4 and unarchive in /opt/
  unarchive:
    src: https://dlcdn.apache.org/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz
    dest: /opt
    remote_src: yes
    validate_certs: no
  tags:
    - accounting
    - accounting:maven

- name: Maven (mvn) symbolic link
  file:
    src: /opt/apache-maven-3.8.4/bin/mvn 
    dest: '/usr/local/bin/mvn'
    owner: "{{ accounting_user }}"
    group: "{{ accounting_group }}"
    state: link
    force: yes
  tags:
    - accounting
    - accounting:maven
    - accounting:maven
    - accounting:maven:link


- name: Create systemd file for Accounting
  template:
   src: accounting.service.j2
   dest: /etc/systemd/system/accounting.service
   owner: root
   group: root
   mode: '0644'
  notify:
    - Reload the systemd daemon
    - accounting service restart and enable
    - Wait a few seconds for the service to wake up
  tags:
    - accounting
    - accounting:service_file


- name: "Create {{ accounting_root_dir }}, {{ accounting_conf_dir }} directories if it does not exist"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ accounting_user }}"
    group: "{{ accounting_group }}"
    mode: '0755'
  loop:
    - "{{ accounting_root_dir }}"
    - "{{ accounting_conf_dir }}"
  tags:
    - accounting
    - accounting:directories

- name: "Create Accounting logs directory if it doesn't exist"
  file:
    path: "{{ accounting_logs_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0700'
  tags:
    - accounting
    - accounting:directories


- name: Find the artifact of the last successful build
  uri:
    url: https://{{ jenkins.host }}/job/{{ jenkins.job }}/job/{{ jenkins.repository }}/job/{{ jenkins.branch }}/lastSuccessfulBuild/api/json
    user: "{{ jenkins.user }}"
    password: "{{ jenkins.password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
  register: _jenkins_results
  tags:
    - accounting
    - accounting:jenkins
    - accounting:jar
    - accounting:update

- name: Download the latest Jenkins artifact
  get_url:
    url: https://{{ jenkins.host }}/job/{{ jenkins.job }}/job/{{ jenkins.repository }}/job/{{ jenkins.branch }}/lastSuccessfulBuild/artifact/{{ _jenkins_results.json.artifacts[0].relativePath }}
    dest: "{{ accounting_root_dir }}/accounting.jar"
    username: "{{ jenkins.user }}"
    password: "{{ jenkins.password }}"
    force_basic_auth: yes
    owner: "{{ accounting_user }}"
    group: "{{ accounting_group }}"
    mode: '0744'
    backup: yes
  notify:
    - accounting service restart and enable
    - Wait a few seconds for the service to wake up
  tags:
    - accounting
    - accounting:jar
    - accounting:update


- name: Download config fies ( unit_type & metric_type ).
  get_url:
    url: "{{ item }}"
    dest: "{{ accounting_conf_dir }}"
  loop:
    - https://raw.githubusercontent.com/ARGOeu/ARGO-accounting/devel/files/unit_type.conf
    - https://raw.githubusercontent.com/ARGOeu/ARGO-accounting/devel/files/metric_type.conf
  tags:
    - accounting
    - accounting:config
    - accounting:update


- name: Recursively change ownership of the Accounting directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: "{{ accounting_user }}"
    group: "{{ accounting_group }}"
  loop:
    - "{{ accounting_root_dir }}"
    - "{{ accounting_conf_dir }}"
  tags:
    - accounting
    - accounting:directories
    - accounting:update


- name: Create rsyslog filter for Accounting logs
  template:
    src: etc/rsyslog.d/71_accounting.conf.j2
    dest: /etc/rsyslog.d/71_accounting.conf
    backup: yes
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart rsyslog
  tags:
    - accounting
    - accounting:logs
    - accounting:rsyslog

- name: Create logrotate configuration for accounting logs
  copy:
    src: etc/logrotate.d/accounting
    dest: /etc/logrotate.d/accounting
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart rsyslog
  tags:
    - accounting
    - accounting:logs
    - accounting:logrotate


- meta: flush_handlers


- name: Check API call (1/2)
  become: no
  local_action:
    module: uri
    url: "https://{{ inventory_hostname }}/accounting-system/metric-definition"
    method: GET
    validate_certs: false
    status_code:
      - 200
    return_content: yes
  retries: 5
  delay: 10
  register: validate
  until: validate.status == 200
  tags:
    - accounting
    - accounting:check
    - accounting:update

- name: Check API call (2/2)
  become: no
  local_action:
    module: uri
    url: "https://{{ inventory_hostname }}/accounting-system/metric-definition/unit-types"
    method: GET
    validate_certs: false
    status_code:
      - 200
    return_content: yes
  retries: 5
  delay: 10
  register: validate
  until: validate.status == 200
  tags:
    - accounting
    - accounting:check
    - accounting:update




- name: More about Accounting project.
  debug:
    msg:
    - https://github.com/ARGOeu/ARGO-accounting/tree/devel
  tags:
    - accounting
    - accounting:check
